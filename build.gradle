plugins {
	id "java"
	id "eclipse"
	id "application"
	id "nebula.info" version "2.2.0"
	id "nebula.os-package" version "2.2.0"
}

repositories {
	jcenter()
	mavenCentral()
}

group = 'ninja.siden'
version = '0.1.0'

sourceCompatibility = targetCompatibility = 1.8

tasks.withType(AbstractCompile)*.options*.encoding = "UTF-8"

configurations { agent }

dependencies {
	compile 'ninja.siden:siden-core:0.4.0'
	agent('org.jolokia:jolokia-jvm:1.2.3:agent') { transitive = false }
	testCompile 'org.jmockit:jmockit:1.+'
	testCompile 'junit:junit:4.+'
}

eclipse {
	classpath {
		containers = [
			'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
		]
	}
}

mainClassName = "ninja.siden.sirusi.Sirusi"
applicationDefaultJvmArgs = [
	"-javaagent:\$APP_HOME/lib/${configurations.agent.iterator().next().name}"
]
applicationDistribution.from(configurations.agent) { into "lib" }
startScripts {
	doLast {
		unixScript.text = unixScript.text.replace('\\$APP_HOME', '\$APP_HOME')
		windowsScript.text = windowsScript.text.replace('$APP_HOME/lib/', '%APP_HOME%\\lib\\')
	}
}

ospackage {
	user = 'sirusi'
	permissionGroup = 'sirusi'
	packageDescription = 'avatar server'
	user= 'taichi'
	packager= 'taichi'
	url='https://github.com/taichi/sirusi'

	preInstall    file('src/pkg/scripts/preinst')
	postInstall   file('src/pkg/scripts/postinst')
	preUninstall  file('src/pkg/scripts/prerm')

	into '/opt/sirusi'

	from(jar.outputs.files) { into 'lib' }
	from(startScripts.outputDir) {
		into 'bin'
		fileMode = 0550
	}
	from(configurations.runtime) { into 'lib' }
	from(configurations.agent) { into 'lib' }
	
	buildDeb {
		from('src/pkg/ubuntu/sirusi.conf') { into '/etc/init' }
	}
	// TODO Systemd
}

[buildDeb, buildRpm].each { it.dependsOn startScripts }
